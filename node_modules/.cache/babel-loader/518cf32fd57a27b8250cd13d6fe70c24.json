{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-beta2): dom/data.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst mapData = (() => {\n  const storeData = {};\n  let id = 1;\n  return {\n    set(element, key, data) {\n      if (typeof element.bsKey === 'undefined') {\n        element.bsKey = {\n          key,\n          id\n        };\n        id++;\n      }\n      storeData[element.bsKey.id] = data;\n    },\n    get(element, key) {\n      if (!element || typeof element.bsKey === 'undefined') {\n        return null;\n      }\n      const keyProperties = element.bsKey;\n      if (keyProperties.key === key) {\n        return storeData[keyProperties.id];\n      }\n      return null;\n    },\n    delete(element, key) {\n      if (typeof element.bsKey === 'undefined') {\n        return;\n      }\n      const keyProperties = element.bsKey;\n      if (keyProperties.key === key) {\n        delete storeData[keyProperties.id];\n        delete element.bsKey;\n      }\n    }\n  };\n})();\nconst Data = {\n  setData(instance, key, data) {\n    mapData.set(instance, key, data);\n  },\n  getData(instance, key) {\n    return mapData.get(instance, key);\n  },\n  removeData(instance, key) {\n    mapData.delete(instance, key);\n  }\n};\nexport default Data;","map":null,"metadata":{},"sourceType":"module"}